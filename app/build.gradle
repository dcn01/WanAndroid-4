import com.tainzhi.android.buildsrc.Libs

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

// get git commit counts, ie 73
static def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

// after you run `git tag`, then you can retrieve it
static def gitVersionTag() {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern
    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else {
        version = version + ".0"
    }
    return version
}

apply from: '../test_dependencies.gradle'

//生成打包时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    signingConfigs {
        def release_keyStoreFile
        def release_keyStorePassword
        def release_keyAlias
        def release_keyPassword
        config {
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
            properties.load( inputStream )

            //读取文件
            release_keyStoreFile = properties.getProperty('release_keyStoreFile')
            //读取字段
            release_keyAlias = properties.getProperty( 'release_keyAlias' )
            release_keyPassword = properties.getProperty( 'release_keyPassword' )
            release_keyStorePassword = properties.getProperty( 'release_keyStorePassword' )
        }
        release {

            storeFile file( release_keyStoreFile )
            storePassword release_keyStorePassword
            keyAlias release_keyAlias
            keyPassword release_keyPassword
        }
    }
    compileSdkVersion Libs.Version.compileSdkVersion
    buildToolsVersion Libs.Version.buildToolsVersion

    defaultConfig {
        applicationId "com.tanzhi.android.wanandroid"
        minSdkVersion Libs.Version.minSdkVersion
        targetSdkVersion Libs.Version.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode gitVersionCode()
        versionName gitVersionTag()
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "QWanAndroid_${variant.versionName}${variant.flavorName}_${variant.buildType.name}.apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation Libs.Kotlin.stdlib
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.preference
    implementation Libs.AndroidX.constraintlayout
    implementation Libs.AndroidX.viewPager2
    implementation Libs.AndroidX.swiperefresh
    implementation Libs.AndroidX.Navigation.fragment
    implementation Libs.AndroidX.Navigation.ui
    implementation Libs.AndroidX.Lifecycle.viewmodelKtx
    implementation Libs.AndroidX.Lifecycle.livedata
    implementation Libs.AndroidX.Lifecycle.extensions
    implementation Libs.AndroidX.Room.runtime
    implementation Libs.AndroidX.Room.ktx
    kapt Libs.AndroidX.Room.compiler

    implementation Libs.Google.material

    implementation Libs.Coroutines.android

    implementation Libs.Koin.scope
    implementation Libs.Koin.viewmodel

    implementation Libs.Retrofit.retrofit
    implementation Libs.Retrofit.gsonConverter
    implementation Libs.OkHttp.loggingInterceptor
    implementation Libs.cookietar

    implementation Libs.Glide.glide
    kapt Libs.Glide.compiler

    debugImplementation Libs.leakCanary

    implementation Libs.baseRecyclerViewAdapterHelper
    implementation Libs.youthBanner
    implementation Libs.tencentTbssdk
    implementation Libs.vertialTabLayout
    implementation Libs.flowlayout
    implementation Libs.licenseDialog
}
